name: Release on Merge

on:
  push:
    branches:
      - main

jobs:
  # 1. Extract version up front (runs once, fast, avoids duplication)
  extract-version:
    name: Extract Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Extracts <Version> from Directory.Build.props and exposes as output
      - name: Get version from Directory.Build.props
        id: get_version
        shell: bash
        run: |
          version=$(sed -n 's/[[:space:]]*<Version>\([^<]*\)<\/Version>.*/\1/p' Directory.Build.props | head -n 1 | tr -d '[:space:]')
          echo "version=$version"
          echo "version=$version" >> $GITHUB_OUTPUT

  # 2. Build & package matrix, version is passed in from extract-version
  build-and-package:
    name: Build and Package (${{ matrix.rid }})
    needs: extract-version
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - rid: win-x64
            runner: windows-latest
          - rid: win-arm64
            runner: windows-latest
          - rid: linux-x64
            runner: ubuntu-latest
          - rid: linux-arm64
            runner: ubuntu-latest
          - rid: osx-x64
            runner: macos-latest
          - rid: osx-arm64
            runner: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: Publish self-contained (${{ matrix.rid }})
        run: |
          dotnet publish MermaidPad.csproj -c Release -r ${{ matrix.rid }} -o publish/${{ matrix.rid }}

      # No manual zippingâ€”just upload the published directory as artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MermaidPad-${{ needs.extract-version.outputs.version }}-${{ matrix.rid }}
          path: publish/${{ matrix.rid }}

  # 3. Create GitHub Release (collects all artifacts)
  release:
    name: Create GitHub Release
    needs: [extract-version, build-and-package]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: v${{ needs.extract-version.outputs.version }}
          name: MermaidPad v${{ needs.extract-version.outputs.version }}
          artifacts: artifacts/**
          allowUpdates: true
          generateReleaseNotes: true
          artifactErrorsFailBuild: true
          
